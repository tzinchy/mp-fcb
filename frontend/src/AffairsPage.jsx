import React, { useState, useEffect, useRef } from "react";
import AffairsDetails from "./AffairsHistory";
import AffairTableTanstack from "./AffairsTable";
import { AddAffairModal } from "./AddAffairModal";
const backendUrl = import.meta.env.VITE_BACKEND_URL

export default function AffairsPage() {
  const [isDetailsVisible, setIsDetailsVisible] = useState(false);
  const [selectedRow, setSelectedRow] = useState(false);
  const [isAddModalOpen, setIsAddModalOpen] = useState(false);
  const [problemsOptions, setProblemsOptions] = useState([]);
  const apartmentDetails = selectedRow || null;

  const tableRef = useRef();

  const handleReloadTable = () => {
    tableRef.current?.reload(); // –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ reload —É —Ç–∞–±–ª–∏—Ü—ã
  };



  useEffect(() => {
    fetch(`${backendUrl}/main/all_problems`)
      .then((res) => res.json())
      .then((data) => {
        const formatted = data.map((item) => ({
          value: item.problem_id,
          label: item.problem,
        }));
        setProblemsOptions(formatted);
      })
      .catch((error) => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–±–ª–µ–º:", error);
      });
  }, []);

  return (
    <div className="relative flex w-full">
      {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å ‚Äî —Ç–∞–±–ª–∏—Ü–∞ */}
      <div
        className={`flex-grow transition-all duration-300 ${
          isDetailsVisible ? "mr-[35vw]" : ""
        }`}
      >
        <div className="h-[70px] flex items-center justify-between px-6">
          <h1 className="text-xl">–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ</h1>
          <button
            onClick={() => setIsAddModalOpen(true)}
            className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition"
          >
            –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
          </button>
        </div>
<AffairTableTanstack
  ref={tableRef}
  onRowClick={(rowData) => {
    setSelectedRow(rowData);
    setIsDetailsVisible(true);
  }}
/>
      </div>

      {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å ‚Äî –¥–µ—Ç–∞–ª–∏ */}
      <div
        className={`absolute top-0 right-0 h-[calc(100vh-3.67rem)] transition-transform duration-300 ease-in-out ${
          isDetailsVisible ? "translate-x-0" : "translate-x-full"
        }`}
        style={{ width: "35vw", WebkitOverflowScrolling: "touch" }}
      >
        <div className="h-full flex flex-col shadow-lg bg-white">
          <AffairsDetails
            onAfterStageComplete={handleReloadTable}
            setIsDetailsVisible={setIsDetailsVisible}
            setSelectedRow={setSelectedRow}
            apartmentDetails={apartmentDetails}
            className="flex-1"
          />
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
      {isAddModalOpen && (
        <AddAffairModal
          isOpen={isAddModalOpen}
          setIsOpen={setIsAddModalOpen}
          onAfterSubmit={handleReloadTable}
          problemsOptions={problemsOptions}
onSubmit={async (data) => {
  try {
    const response = await fetch(`${backendUrl}/old_apart/create_old_apart`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    });

    if (!response.ok) {
      const errorText = await response.text();
      throw new Error(`–û—à–∏–±–∫–∞: ${response.status} ‚Äî ${errorText}`);
    }

    const result = await response.json();
    console.log("–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ:", result);

    handleReloadTable(); // üî• –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    setIsAddModalOpen(false);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–µ–ª–∞:", error);
    alert("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.");
  }
}}
        />
      )}
    </div>
  );
}